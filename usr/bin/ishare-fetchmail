#!/bin/sh

         


LANG="fr_FR.UTF-9"

send_mail() {

content=$(echo -e "L'erreur suivante s'est produite pendant la tentative de récupération de vos mail : \n\n $exec \n\n Accédez à l'interface iGestis pour corriger ce problème" | iconv --from-code=UTF-8 --to-code=ISO-8859-1 | txt2html)

(
echo "From: noanswer@ishare.homelinux.com"
echo "To: $account "
echo "MIME-Version: 1.0"
echo "Content-Type: multipart/alternative; " 
echo ' boundary="PAA08673.1018277622/ishare.homelinux.com"' 
echo "Subject: Erreur sur un de vos compte mail." 
echo "" 
echo "This is a MIME-encapsulated message" 
echo "" 
echo "--PAA08673.1018277622/ishare.homelinux.com" 
echo "Content-Type: text/html" 
echo "" 
echo "$content"
echo "--PAA08673.1018277622/ishare.homelinux.com"
) | /usr/lib/sendmail -t

}

# On teste la présence d'internet.
##if ! ping -c 1 -w 5 google.com > /dev/null; then exit 0 ; fi
if ! wget google.fr -O /dev/null 2> /dev/null; then exit 0 ; fi

# Déjà, on regarde si le fichier ishare-backup n'est pas en cours d'éxécution
if [ ! -e /var/run/ishare-backup ] ; then

  # On récupère la liste des comptes
  getent passwd | while read i ; do
  
    # On extrait le nom du compte
    account=`echo "$i" | awk -F: '{print $1}'`
    
    # On extrait le dossier personnel
	folder=`echo "$i" | awk -F: '{print $6}'`
	
	# On récupère l'id
	id="$(echo "$i" | cut -d: -f 3)"

	  # On vérifie que ça soit pas un compte ordinateur
	  if [ -z "$(echo $i | grep "Computer")" ] && [ -e /home/"$account"/.fetchmailrc ] && [ "$id" -ge "1000" -a "$id" -le 65533 ] ; then
	  
	    # On corrige les droits
	    chown $account $folder/.fetchmailrc
	    chmod 710 $folder/.fetchmailrc
	    
	    # On vérifie que le fichier n'est pas vide
	    if [ -z "$(file $folder/.fetchmailrc | grep empty)" ] ; then
	    
	      # On lance la commande proprement dite
          exec="$(su - $account -c "/usr/bin/fetchmail -t 15 -s --sslproto SSL3 2>&1"  2>&1)"
          err=$?
          
          
          # S'il y a une erreur
          if [ ! "$err" = 0 ]  && [ ! "$err" = 1 ] && [ ! -z "$exec" ] ; then
            
            # On regarde si une erreur précédente existe
            if [ -e "$folder/.fetchmailrc-err" ] ; then
              
              # Si oui, on récupère le contenu
              exec2="$(cat $folder/.fetchmailrc-err)"
              
              # Si les deux erreurs ne sont pas identique, alors on envoi un mail
              if [ ! "$exec2" = "$exec" ] ; then
                
                # Mail HTML
                send_mail
              fi
            else
              
              # Sinon on créer le fichier et on envoi un mail 
              
              # Si c'est la première fois que l'erreur se passe, on créer un fichier new
              if [ -e "$folder/.fetchmailrc-err-new" ] ; then

                echo -e "$exec" > $folder/.fetchmailrc-err
                chown $account $folder/.fetchmailrc-err
                send_mail              
              else
                echo -e "$exec" > $folder/.fetchmailrc-err-new
                chown $account $folder/.fetchmailrc-err-new
              fi

            fi
          else
            rm -f $folder/.fetchmailrc-err
            rm -f $folder/.fetchmailrc-err-new
          fi  
        fi
      fi
  done
fi
