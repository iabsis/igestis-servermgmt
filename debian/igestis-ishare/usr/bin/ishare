#!/bin/bash

source /usr/lib/ishare/ishare-library

PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

command="$1"
argument2="$2"
argument3="$3"
argument4="$4"

if [ ! -z "$(dpkg -l igestis | grep ^ii)" ] ; then
	package="igestis-core igestis igestis-file-manager-ldap igestis-roundcube igestis-ishare"
else
	package="igestis-core igestis-ldap igestis-file-manager-ldap igestis-roundcube igestis-ishare"
fi

test_path() {
  test2=`echo $1 | grep -v " /$" | grep "^/home/" | grep -v "\.\./" | grep -v " / " | grep -v " /home/ "`
  if [ -z "$test2" ] ; then
     echo "Error, the file is not in /home"
     exit 1
  fi
}

get_igestis_version() {
  dpkg -l $package | grep ii | awk '{print $2" "$3}'
}

case "$command" in

#### GESTION LDAP ####

## Ajouter un user dans ldap (normalement plus nécessaire)
  ldap-add)
    /usr/sbin/smbldap-useradd -a -m $argument2
  ;;

## Vérifier sur un user existe dans ldap (normalement plus nécessaire)
  ldap-exists)
    /usr/sbin/smbldap-userlist $argument2
  ;;

## Liste des comptes du serveur
  list_pw)
    getent passwd
  ;;

## Récupère les droits acl d'un fichier ou dossier
  get_facl)
    getfacl $argument2 | grep $argument3
  ;;

  mk_home_dir)

	
	if [ -e /home/"$argument2" ] && [ "$argument3" = 1 ] ; then
		if [ ! -e /home/samba/oldprofiles/ ] ; then
			mkdir -p /home/samba/oldprofiles/
		fi
		
		rm -f /root/oldprofiles
		ln -s /home/samba/oldprofiles/ /root/oldprofiles
		
		RANDOM2="$RANDOM"
		
		while [ -e /home/samba/oldprofiles/"$argument2"."$RANDOM2" ] ; do
			RANDOM2="$RANDOM"
		done
		
		mv /home/"$argument2"/ /home/samba/oldprofiles/"$argument2"."$RANDOM2"/
	else
		chown -R "$argument2" /home/"$argument2"/
	fi
	
    su - $argument2 -c exit
    echo -e "Bienvenue dans iShare" | mail -s "Bienvenue dans iShare" "$argument2"
  ;;
  
  clean_up_mount)
    mount | grep /var/home/ | while read i ; do
      umount `echo $i | awk '{print $3}'`
    done
  ;;

#### GESTION DE POSTFIX ####

## Configuration des domaines acceptés

  postfix)
    postconf -e "mydestination = serveur.domaine.local, localhost.domaine.local, , localhost, ishare.homelinux.com, $argument2"
    
    domain=`echo $argument2 | awk -F, '{print $1}'`
    if [ -z "$domain" ] ; then
      domain=ishare.homelinux.com
    fi
    echo $domain > /etc/mailname
    /etc/init.d/postfix restart > /dev/null
  ;;

## Configuration du smtp

  smtp)
    postconf -e "relayhost = $argument2"
    /etc/init.d/postfix restart > /dev/null
  ;;

#### GESTION DE LA CASSETTE ####

  tape_mount)
    detect_tape
    mount_tape
  ;;
  
  tape_umount)
  	detect_tape
  	umount_tape
  ;;
  
  tape_mounted)
    detect_tape
  	mounted_tape
  	result=$?
  	if [ "$result" = 2 ] ; then
  		exit 2
  	fi
  	if [ ! "$result" = 1 ] ; then
  		exit 1
  	fi
  ;;

#### GESTION DE LA SAUVEGARDE ####

# Détection de la sauvegarde
# 0 -> pas de sauvegarde
# 1 -> Lancée (On verrouille la page igestis)
# 2 -> La sauvegarde attend que la cassette soit démonté

## Détection si la sauvegarde s'apprête à se lancer ou bien si elle est en train de tourner.
  save_launched)
    if [ -e /var/run/ishare-backup ] && [ ! -z "$(ps ax | grep "$(cat /var/run/ishare-backup)" )" ] ; then
      # Bon, on sait que la sauvegarde tourne
        if [ -e /var/run/ishare-backup-wait ] ; then
            detect_tape
            mounted_tape
            return=$?
            if [ $return = "1" ] ; then
            	exit 1
            fi
          	exit 2
        else
          exit 1
        fi
    else
      exit 0
    fi
  ;;

# Récupération des identifiants de mysql

  mysql_auth)
    login=$(cat /etc/mysql/debian.cnf | grep user | tail -n 1 | cut -d = -f 2 | cut -d" " -f 2)
    password=$(cat /etc/mysql/debian.cnf | grep password | tail -n 1 | cut -d = -f 2 | cut -d" " -f 2)
    echo "$login :: $password"
  ;;

# Restauration depuis la cassette d'un dossier donné.

  restore)
    date="$2"
    folder="$3"
    prefix="$(cat /etc/ishare/backup/backup.conf | grep "RESTORE_PATH" | cut -d= -f 2 | cut -d" " -f 2)"
    if [ ! -z "$folder" ] ; then
      if [ -e "$prefix"/"$date"/"$folder" ] ; then
        if [ -z "$(file "$prefix"/"$date"/"$folder" | grep directory)" ] ; then
          rsync -aA --delete "$prefix"/"$date"/"$folder" "$folder"
        else
          rsync -aA --delete "$prefix"/"$date"/"$folder/" "$folder/"
        fi
      else
        echo "Le dossier demandé n'existe pas"
      fi
    else
      echo "Paramètre manquant"
      exit 1
    fi
  ;;
  
# Listage du contenu d'un dossier

  list-file-folder)
    ls -1 "$argument2" | while read i ; do
    	folder=$(file "$argument2"/"$i")
    	if [ ! -z "$(echo "$folder" | grep directory)" ] ; then
    	  type=D
    	else if [ ! -z "$(echo "$folder" | grep symbolic)" ] ; then
    	  type=L
    	else
    	  type=F
    	fi
    	fi
    	echo "$type" "$i"
    done
   ;;


# Modification ou récupération de l'heure de la sauvegarde

  backup-crontab-set)
    minute=$argument2
    hour=$argument3
    echo "$minute $hour * * * root /usr/bin/ishare-backup" > /etc/cron.d/ishare-backup
    sleep 1
    /etc/init.d/cron reload
  ;;

  backup-crontab-get)
    cat /etc/cron.d/ishare-backup | cut -d" " -f 1,2
  ;;

# Service

  service)
    case "$argument2" in
  	  apache)
  	    if [ "$argument3" = "status" ] ; then
  	      /etc/init.d/apache2 status
  	      if [ "$?" = 0 ] ; then
  	        exit 1
  	      else
  	      	exit 0
  	      fi
  	    else
  	      if [ "$argument3" = "restart" ] ; then
  	        argument3=restart
  	      fi
  	      eval /etc/init.d/apache2 "$argument3" &
  	    fi
  	  ;;
  	  
  	  postfix)
  	    if [ "$argument3" = "status" ] ; then
  	      /etc/init.d/postfix status > /dev/null
  	      if [ "$?" = 0 ] ; then
  	        exit 1
  	      else
  	      	exit 0
  	      fi
  	    else
  	      eval /etc/init.d/postfix "$argument3"
  	    fi
  	  ;;
  	  
  	  cups)
  	    if [ "$argument3" = "status" ] ; then
  	      /etc/init.d/cups status > /dev/null
  	      if [ "$?" = 0 ] ; then
  	        exit 1
  	      else
  	      	exit 0
  	      fi
  	    else
  	      eval /etc/init.d/cups "$argument3"
  	    fi
  	  ;;
  	  
  	  mysql)
  	    if [ "$argument3" = "status" ] ; then
  	      /etc/init.d/mysql status > /dev/null
  	      if [ "$?" = 0 ] ; then
  	        exit 1
  	      else
  	      	exit 0
  	      fi
  	    else
  	      eval /etc/init.d/mysql "$argument3"
  	    fi
  	  ;;
  	  
  	  samba)
  	    if [ "$argument3" = "status" ] ; then
  	      if [ -e /var/run/samba/smbd.pid ] && [ ! -z "$(ps -p $(cat /var/run/samba/smbd.pid) -o pid= | grep "$(cat /var/run/samba/smbd.pid)" )" ] ; then
  	        exit 1
  	      else
  	      	exit 0
  	      fi
  	    else
  	      eval /etc/init.d/samba "$argument3"
  	    fi
  	  ;;
  	  
  	  ldap)
  	    if [ "$argument3" = "status" ] ; then
  	      if [ -e /var/run/slapd/slapd.pid ] && [ ! -z "$(ps -p $(cat /var/run/slapd/slapd.pid) -o pid= | grep "$(cat /var/run/slapd/slapd.pid)" )" ] ; then
  	        exit 1
  	      else
  	      	exit 0
  	      fi
  	    else
  	      eval /etc/init.d/slapd "$argument3"
  	    fi
  	  ;;
  	  
  	  dovecot)
  	    if [ "$argument3" = "status" ] ; then
  	      if [ -e /var/run/dovecot/master.pid ] && [ ! -z "$(ps -p $(cat /var/run/dovecot/master.pid) -o pid= | grep "$(cat /var/run/dovecot/master.pid)" )" ] ; then
  	    exit 1
  	      else
  	      	exit 0
  	      fi
  	    else
  	      eval /etc/init.d/dovecot "$argument3"
  	    fi
  	  ;;
    esac
  ;;

  printer-list)
    lpstat -p
  ;;
  printer-remove)
    lpadmin -x $argument2
  ;;
  
  # On vérifie la présence de mise à jour
  # 0 -> Pas d'erreur et pas de mise à jour
  # 1 -> Pas d'internet
  # 2 -> Quelqu'un à déjà lancé le script de mise à jour
  # 3 -> Des mises à jour sont disponibles


  
  check-update)
    
    # On vérifie la présence de Internet



    if [ -e /etc/cron.d/ishare-update ] ; then
      get_igestis_version
      exit 4
    fi
    
    if ! wget google.fr -O /dev/null 2> /dev/null; then 
	get_igestis_version
	exit 1
    fi
    
    LANG="$argument2" apt-get update > /dev/null 2>&1
    res=$?
    
    if [ "$res" = 100 ] ; then
      get_igestis_version
      exit 2
    fi
    
    version=$(apt-get install $package -s | grep "Inst" | grep -i "igestis" \
	| sed "s/Inst //g" \
	| awk '{print $1" "$2" "$3}' \
	| sed 's/\[//g;s/]//g;s/(//g;s/)//g' )
    
    if [ ! -z "$version" ] ; then

        echo "$version"

        for i in $package ; do
          if [ -z "$(echo "$version" | grep $i)" ] ; then
            dpkg -l $i | grep ii | awk '{print $2" "$3}'
          fi
        done

        exit 3
    fi
    
    get_igestis_version

  ;;
  
  run-update)
  
#  apt-get install $package --force-yes -q -y > /dev/null 2>&1
  DEBIAN_FRONTEND='noninteractive' apt-get -o Dpkg::Options::='--force-confnew' -y --force-yes install $package 
#  aptitude --allow-untrusted -o CmdLine=Never-Prompt -o CmdLine=Assume-Yes install $package
  rm -f /etc/cron.d/ishare-update
  /etc/init.d/cron reload > /dev/null 2>&1
  
  DEBIAN_FRONTEND='noninteractive' apt-get -f install -q -o Dpkg::Options::='--force-confnew' -y --force-yes
  dpkg --configure -a
  
  ;;



  install-update)
    now=$(date +%s)
    now=$(($now+70))
    hour=$(date -d @$now +%H)
    minute=$(date -d @$now +%M)
    
    echo "$minute $hour * * * root /usr/bin/ishare run-update" > /etc/cron.d/ishare-update
    /etc/init.d/cron reload > /dev/null 2>&1
    
  ;;

  check-backup-status)
    result="$(tail -n 1 /var/log/ishare/backup | grep unsuccessfully)"
    if [ -z "$result" ] ; then
      exit 0
    else
      tail -n 1 /var/log/ishare/backup | grep unsuccessfully | awk -F" : " '{print $2}'
      exit 1
    fi
  ;;
  
  module-install)
    if [ ! -z "$(echo $argument2 | grep "igestis-")" ] ; then 
  		apt-get install $argument2 --force-yes -q -y
    fi
  ;;  
  
  module-uninstall)
    if [ ! -z "$(echo $argument2 | grep "igestis-")" ] ; then
    	apt-get remove $argument2 --force-yes -q -y
    fi
  ;;

# Remote control

  remote-control-start)
    pw="$argument2"
    chmod 400 /usr/share/ishare/ssh/id_rsa
    useradd remotecishare -d /dev/null
    groupadd admin
    adduser remotecishare admin
    passwd remotecishare << EOF > /dev/null
$pw
$pw
EOF
    ssh -R 65000:localhost:22 remotec@thales.iabsis.com -i /usr/share/ishare/ssh/id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null 'sleep 30'
    userdel remotecishare
  ;;
  
  remote-control-status)
    if [ -z "$(ps ax | grep 'remotec@thales.iabsis.com' | grep -v 'grep')" ] ; then
    	exit 0
    else
    	exit 1
    fi
  ;;
  
  remote-control-stop)
    pid=$(ps ax | grep 'remotec@thales.iabsis.com' | grep -v 'grep' | awk '{print $1}')
    kill $pid
  ;;
  
  fetchmail)
    su - $argument2 -c "chmod 710 ~/.fetchmailrc-tmp"
    su - $argument2 -c "/usr/bin/fetchmail -c -t 20 -f ~/.fetchmailrc-tmp --sslproto SSL3 2>&1"  2>&1
  ;;

  get_user_fetchmail)
    su - $argument2 -c "chmod 710 ~/.fetchmailrc"
    su - $argument2 -c "/usr/bin/fetchmail -c -t 20 -f ~/.fetchmailrc --sslproto SSL3 2>&1"  2>&1
  ;;
  
  get_domain)
  	domain="$(cat /etc/samba/smb.conf | grep -i workgroup | grep = | awk -F"= " '{print $2}')"
  	if [ -z "$domain" ] ; then
  		domain="$(cat /etc/samba/smb.conf | grep -i workgroup | grep = | awk -F"=" '{print $2}')"
  	fi
  	echo "$domain"
  ;;

#### AUCUN ####

## Autres cas
  *)
    echo -e "Syntax : \n list_pw"
    exit 110
  ;;




esac

